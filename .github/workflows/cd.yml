# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: CD, Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main

jobs:
#  e2e:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [ 18.x ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Use Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: ${{ matrix.node-version }}
#      - name: Run docker compose as background services
#        run: docker-compose -f docker-compose.e2e.yml up -d
#      - name: Check docker ip
#        run: docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' quarkus
#      - name: Cypress install dependencies
#        run: npm ci --legacy-peer-deps
#      - name: Cypress run
#        uses: cypress-io/github-action@v5
#        with:
#          install: false
#          build: npm run build
#          start: npm start


  build_and_deploy:
    # needs: e2e
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Run tests
        run: npm test
      - name: Build application
        run: npm run build
      - name: Test, Build and analyze in SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_KEY }}
        run: npm run sonar
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_INSTRUWEB_CD }}'
          channelId: live
          projectId: instruweb-cd

  performance-test:
    needs: build_and_deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 18.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run docker compose as background services
        run: docker-compose -f docker-compose.e2e.yml up -d
      - name: Install dependencies
        run: npm ci --legacy-peer-deps
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: |
            https://instruweb-cd.web.app/
          budgetPath: ./budget.json # test performance budgets
          uploadArtifacts: true # save results as an action artifacts
          temporaryPublicStorage: true # upload lighthouse report to the temporary storage
